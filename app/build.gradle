apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.google.android.gms.oss-licenses-plugin'
apply from: '../buildSrc/pmd.gradle'
apply from: '../buildSrc/checkstyle.gradle'
apply from: '../buildSrc/findbugs.gradle'
apply from: 'buildscripts/l10n.gradle'

android {
    signingConfigs {
        config {
            keyAlias 'shark'
            keyPassword 'alpha@2017'
            storeFile file('/Users/ajitmaurya/AndroidStudioProjects/Shark-Browser-v2/app/shark.jks')
            storePassword 'alpha@2017'
        }
    }
    compileSdkVersion Versions.compile_sdk
    buildToolsVersion Versions.build_tools
    defaultConfig {
        applicationId "ajit.browser.lightning"
        minSdkVersion Versions.min_sdk
        targetSdkVersion Versions.target_sdk
        versionCode 4
        versionName '1.0.4'
        multiDexEnabled true

        vectorDrawables {
            useSupportLibrary false
            generatedDensities = []
        }

        // used by Room, to test migrations
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }

        compileOptions {
            sourceCompatibility JavaVersion.VERSION_1_8
            targetCompatibility JavaVersion.VERSION_1_8
        }
    }
    dexOptions {
        preDexLibraries true
    }
    bundle {
        language {
            enableSplit = false
        }
        density {
            enableSplit = false
        }
        abi {
            enableSplit = true
        }
    }
    // We have a three dimensional build configuration:
    // BUILD TYPE (debug, release)
    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

    }

}

repositories {
    flatDir {
        dirs 'libs'
    }
    mavenCentral()
}

dependencies {
    implementation project(':telemetry-annotation')
    kapt project(':telemetry-compiler')
    implementation project(':third_party:subsampling-scale-image-view')
    implementation project(':third_party:glide:annotation')
    implementation project(':third_party:glide:library')
    kapt "com.github.bumptech.glide:compiler:${Versions.glide}"
    implementation project(':firebase')
    implementation project(':feature-tabs')
    implementation project(':HttpRequest')
    implementation project(':httptask')
    implementation project(':urlutils')
    implementation project(':fileutils')
    implementation project(':icon')
    implementation project(':logger')
    implementation project(':threadutils')
    implementation project(':cachedrequestloader')
    implementation project(':permissionhandler')
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${Versions.kotlin}"

    implementation "com.android.support:customtabs:${Versions.support}"
    implementation "com.android.support:support-v4:${Versions.support}"
    implementation "com.android.support:appcompat-v7:${Versions.support}"
    implementation "com.android.support:design:${Versions.support}"
    implementation "com.android.support:cardview-v7:${Versions.support}"
    implementation "com.android.support:recyclerview-v7:${Versions.support}"
    implementation "com.android.support.constraint:constraint-layout:${Versions.constraint}"
    implementation "android.arch.work:work-runtime:${Versions.arch_work}"
    implementation 'com.google.android.gms:play-services-ads:15.0.1'
    implementation 'com.android.support:multidex:1.0.3'

    // Architecture components
    implementation "android.arch.lifecycle:extensions:${Versions.lifecycle}"
    implementation "android.arch.lifecycle:common-java8:${Versions.lifecycle}"
    implementation "android.arch.persistence.room:runtime:${Versions.room}"
    implementation "android.arch.navigation:navigation-fragment:${Versions.navigation}"
    kapt "android.arch.persistence.room:compiler:${Versions.room}"
    implementation("com.google.code.findbugs:annotations:${Versions.findbugs}", {
        // We really only need the SuppressFBWarnings annotation, everything else can be ignored.
        // Without this we get weird failures due to dependencies.
        transitive = false
    })
    implementation "org.mozilla.components:browser-session:${Versions.android_components}"
    implementation "org.mozilla.components:service-telemetry:${Versions.android_components}"
    implementation "org.mozilla.components:browser-domains:${Versions.android_components}"
    implementation "org.mozilla.components:ui-autocomplete:${Versions.android_components}"
    implementation "com.adjust.sdk:adjust-android:${Versions.adjust}"
    implementation "com.google.android.gms:play-services-analytics:${Versions.firebase}"

    // Required by Adjust

    // Required by Adjust
    implementation "com.airbnb.android:lottie:${Versions.lottie}"
    testImplementation "junit:junit:${Versions.junit}"
    testImplementation "org.robolectric:robolectric:${Versions.robolectric}"
    testImplementation "org.mockito:mockito-core:${Versions.mockito}"
    androidTestImplementation("com.android.support.test.espresso:espresso-core:${Versions.espresso}", {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    androidTestImplementation "com.android.support.test:runner:${Versions.test_runner}"
    androidTestImplementation "com.android.support.test.espresso:espresso-idling-resource:${Versions.espresso}"
    androidTestImplementation "com.android.support:support-annotations:${Versions.support}"
    androidTestImplementation "com.android.support.test.uiautomator:uiautomator-v18:${Versions.uiautomator}"
    androidTestImplementation "com.squareup.okhttp3:mockwebserver:${Versions.mockwebserver}"
    androidTestImplementation "android.arch.persistence.room:testing:${Versions.room}"
    androidTestImplementation "android.arch.core:core-testing:${Versions.arch_core}"
    androidTestImplementation("com.android.support.test.espresso:espresso-contrib:${Versions.espresso}", {
        exclude group: 'com.android.support', module: 'appcompat'
        exclude group: 'com.android.support', module: 'support-v4'
        exclude module: 'recyclerview-v7'
    })
    androidTestImplementation "com.android.support.test.espresso:espresso-web:${Versions.espresso}"
    androidTestImplementation "com.android.support.test.espresso:espresso-intents:${Versions.espresso}"
    androidTestImplementation "tools.fastlane:screengrab:${Versions.fastlane_screengrab}"
    androidTestImplementation "com.jraska:falcon:${Versions.jraska_falcon}"

    //    androidTestUtil "com.android.support.test:orchestrator:${Versions.test_runner}"

    // LeakCanary
    debugImplementation "com.squareup.leakcanary:leakcanary-android:${Versions.leakcanary}"

    // coverageImplementation "com.squareup.leakcanary:leakcanary-android-no-op:${Versions.leakcanary}"
    releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:${Versions.leakcanary}"

    //    firebaseImplementation "com.squareup.leakcanary:leakcanary-android:${Versions.leakcanary}"
    implementation project(':bhaskar')
    implementation project(':newspoint')
    implementation project(':partnerrepository')
}

// -------------------------------------------------------------------------------------------------
// LeakCanary - Ensure the no-op dependency is always used in JVM tests.
// -------------------------------------------------------------------------------------------------



tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        kotlinOptions.allWarningsAsErrors = true
    }
}


